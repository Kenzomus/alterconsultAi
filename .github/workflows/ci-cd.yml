name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: drupal
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Install PHP 8.3 and extensions manually
      run: |
        sudo apt update
        sudo apt install -y software-properties-common
        sudo add-apt-repository -y ppa:ondrej/php
        sudo apt update
        sudo apt install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo php8.3-xmlrpc php8.3-sqlite3 php8.3-pgsql php8.3-redis php8.3-imagick php8.3-gmp php8.3-ldap php8.3-apcu
        sudo update-alternatives --set php /usr/bin/php8.3
        sudo rm -f /usr/local/bin/php
        sudo ln -s /usr/bin/php8.3 /usr/local/bin/php
        echo "Verifying PHP version after manual setup:"
        php -v
        which php

    - name: Prepare Composer
      run: |
        curl -sS https://getcomposer.org/installer | /usr/bin/php8.3 -- --install-dir=/usr/local/bin --filename=composer
        /usr/bin/php8.3 /usr/local/bin/composer self-update --stable
        /usr/bin/php8.3 /usr/local/bin/composer clear-cache
        /usr/bin/php8.3 /usr/local/bin/composer validate

    - name: Install Composer Dependencies
      run: /usr/bin/php8.3 /usr/local/bin/composer install --prefer-dist --no-progress

    - name: Setup Drupal
      run: |
        cp web/sites/default/default.settings.php web/sites/default/settings.php
        cp web/sites/default/default.services.yml web/sites/default/services.yml
        mkdir -p web/sites/default/files
        chmod -R 777 web/sites/default/files

    - name: Run PHPUnit Tests
      run: |
        ./vendor/bin/phpunit --configuration web/core/phpunit.xml.dist web/modules/custom

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Install PHP 8.3 and extensions manually (Deploy Job)
      run: |
        sudo apt update
        sudo apt install -y software-properties-common
        sudo add-apt-repository -y ppa:ondrej/php
        sudo apt update
        sudo apt install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo php8.3-xmlrpc php8.3-sqlite3 php8.3-pgsql php8.3-redis php8.3-imagick php8.3-gmp php8.3-ldap php8.3-apcu
        sudo update-alternatives --set php /usr/bin/php8.3
        sudo rm -f /usr/local/bin/php
        sudo ln -s /usr/bin/php8.3 /usr/local/bin/php
        echo "Verifying PHP version after manual setup (Deploy Job):"
        php -v
        which php

    - name: Prepare Composer (Deploy Job)
      run: |
        curl -sS https://getcomposer.org/installer | /usr/bin/php8.3 -- --install-dir=/usr/local/bin --filename=composer
        /usr/bin/php8.3 /usr/local/bin/composer self-update --stable
        /usr/bin/php8.3 /usr/local/bin/composer clear-cache
        /usr/bin/php8.3 /usr/local/bin/composer validate

    - name: Install Composer Dependencies
      run: /usr/bin/php8.3 /usr/local/bin/composer install --prefer-dist --no-dev --optimize-autoloader

    - name: Deploy to Pantheon
      if: env.PANTHEON_SITE_UUID != ''
      env:
        PANTHEON_SITE_UUID: ${{ secrets.PANTHEON_SITE_UUID }}
        PANTHEON_MACHINE_TOKEN: ${{ secrets.PANTHEON_MACHINE_TOKEN }}
      run: |
        ./vendor/bin/terminus auth:login --machine-token=$PANTHEON_MACHINE_TOKEN
        ./vendor/bin/terminus build:env:push $PANTHEON_SITE_UUID.dev

    - name: Deploy to Acquia
      if: env.ACQUIA_KEY != ''
      env:
        ACQUIA_KEY: ${{ secrets.ACQUIA_KEY }}
        ACQUIA_SECRET: ${{ secrets.ACQUIA_SECRET }}
        ACQUIA_APP_NAME: ${{ secrets.ACQUIA_APP_NAME }}
      run: |
        /usr/bin/php8.3 /usr/local/bin/composer require acquia/blt
        ./vendor/bin/blt deploy --environment=dev

    - name: Deploy to AWS
      if: env.AWS_ACCESS_KEY_ID != ''
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}
      run: |
        aws s3 sync web/ s3://$AWS_S3_BUCKET/
        aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths "/*"