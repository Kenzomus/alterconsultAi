name: Test and Deploy to Pantheon Dev

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Clean up Composer environment
        run: |
          rm -rf vendor
          rm -f composer.lock
          rm -rf /home/runner/.cache/composer

      - name: Manually install PHP 8.3 and extensions
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get update
          sudo apt-get install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo php8.3-xmlrpc php8.3-soap php8.3-sqlite3 php8.3-pgsql php8.3-redis php8.3-imagick php8.3-gmp php8.3-ldap php8.3-apcu
          sudo update-alternatives --set php /usr/bin/php8.3

      - name: Prepare Composer
        run: |
          composer self-update --stable
          composer clear-cache
          composer validate

      - name: Debug PHP version and path
        run: |
          php -v
          which php

      - name: Debug PHP and Composer versions
        run: |
          php -v
          composer --version

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-ansi

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit || true

      - name: Run PHPCS
        run: vendor/bin/phpcs || true

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse || true

      - name: Run Security Check
        run: vendor/bin/local-php-security-checker check || true

  deploy:
    needs: test
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Clean up Composer environment
        run: |
          rm -rf vendor
          rm -f composer.lock
          rm -rf /home/runner/.cache/composer

      - name: Manually install PHP 8.3 and extensions (Deploy Job)
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get update
          sudo apt-get install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo php8.3-xmlrpc php8.3-soap php8.3-sqlite3 php8.3-pgsql php8.3-redis php8.3-imagick php8.3-gmp php8.3-ldap php8.3-apcu
          sudo update-alternatives --set php /usr/bin/php8.3

      - name: Prepare Composer (Deploy Job)
        run: |
          composer self-update --stable
          composer clear-cache
          composer validate

      - name: Debug PHP and Composer versions (Deploy Job)
        run: |
          php -v
          composer --version

      - name: Install Dependencies
        run: composer install --prefer-dist --no-dev --optimize-autoloader --no-ansi

      - name: Set up Terminus
        run: |
          curl -O https://github.com/pantheon-systems/terminus/releases/download/3.0.0/terminus.phar
          chmod +x terminus.phar
          sudo mv terminus.phar /usr/local/bin/terminus

      - name: Authenticate with Pantheon
        run: terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}

      - name: Push code to Pantheon Dev
        run: |
          git remote add pantheon ssh://codeserver.dev.${{ secrets.PANTHEON_SITE }}@codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in:2222/~/repository.git
          git push pantheon main:master --force

      - name: Run database updates and configuration import
        run: |
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- updb -y
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cim -y
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cr
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cron

      - name: Notify on Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}\n          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took\n        env:\n          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}\n        if: always()\n```

After manually replacing the content of `.github/workflows/pantheon-deploy.yml` with the code above, please save the file, commit the changes, and push to your `main` branch on GitHub. This will trigger a new workflow run.

Once the workflow runs, please share the results with me. With the manual PHP 8.3 installation in place, the Composer dependency issue should ideally be resolved. I apologize again for the inconvenience with the editing tool.