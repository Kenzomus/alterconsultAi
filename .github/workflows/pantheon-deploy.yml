name: Test and Deploy to Pantheon Dev

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Clean up Composer environment
        run: |
          rm -rf vendor
          rm -f composer.lock
          rm -rf /home/runner/.cache/composer

      - name: Install PHP 8.3 and extensions manually
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt update
          sudo apt install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo php8.3-xmlrpc php8.3-sqlite3 php8.3-pgsql php8.3-redis php8.3-imagick php8.3-gmp php8.3-ldap php8.3-apcu
          sudo update-alternatives --set php /usr/bin/php8.3

      - name: Prepare Composer
        run: |
          composer self-update --stable
          composer clear-cache
          composer validate

      - name: Allow phpstan/extension-installer
        run: composer config allow-plugins.phpstan/extension-installer true

      - name: Allow dealerdirect/phpcodesniffer-composer-installer
        run: composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true

      - name: Install Dependencies
        run: /usr/bin/php8.3 $(which composer) install --prefer-dist --no-progress --no-ansi --ignore-platform-reqs --no-plugins

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit || true

      - name: Run PHPCS
        run: vendor/bin/phpcs || true

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse || true

      - name: Run Security Check
        run: vendor/bin/local-php-security-checker check || true

  deploy:
    needs: test
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-24.04
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Clean up Composer environment
        run: |
          rm -rf vendor
          rm -f composer.lock
          rm -rf /home/runner/.cache/composer

      - name: Update apt cache and clean
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt clean

      - name: Install PHP 8.3 and extensions manually (Deploy Job)
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt update
          sudo apt install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo php8.3-xmlrpc php8.3-sqlite3 php8.3-pgsql php8.3-redis php8.3-imagick php8.3-gmp php8.3-ldap php8.3-apcu
          sudo update-alternatives --set php /usr/bin/php8.3

      - name: Prepare Composer (Deploy Job)
        run: |
          composer self-update --stable
          composer clear-cache
          composer validate

      - name: Allow phpstan/extension-installer
        run: composer config allow-plugins.phpstan/extension-installer true

      - name: Allow dealerdirect/phpcodesniffer-composer-installer (Deploy Job)
        run: composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true

      - name: Install Dependencies
        run: /usr/bin/php8.3 $(which composer) install --prefer-dist --no-dev --optimize-autoloader --no-ansi --ignore-platform-reqs --no-plugins

      - name: Set up Terminus
        run: |
          curl -L -f -O https://github.com/pantheon-systems/terminus/releases/download/4.0.1/terminus.phar
          chmod +x terminus.phar
          sudo mv terminus.phar /usr/local/bin/terminus
          ls -lh /usr/local/bin/terminus
          file /usr/local/bin/terminus
          head /usr/local/bin/terminus

      - name: Authenticate with Pantheon
        run: terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}
        env:
          TERMINUS_ALLOW_UNSUPPORTED_NEWER_PHP: 1

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git config --global --add safe.directory /__w/alterconsultAI/alterconsultAI

      - name: Debug PHP and Composer versions in Deploy Job
        run: |
          echo "PHP version: $(php -v)"
          echo "Path to PHP: $(which php)"
          echo "Composer version: $(composer --version)"
          echo "Path to Composer: $(which composer)"
          ls -l /usr/bin/php*

      - name: Deploy code to Pantheon using Terminus
        run: |
          set -x
          echo "Setting connection mode to Git..."
          /usr/bin/php8.3 $(which terminus) connection:set ${{ secrets.PANTHEON_SITE }}.dev git

          echo "Creating a temporary directory for the deployment..."
          TEMP_DIR=$(mktemp -d)
          cp -r ./* $TEMP_DIR/
          cd $TEMP_DIR

          echo "Initializing git repository..."
          git init

          git add .
          git commit -m "Deploy from GitHub Actions"

          echo "Adding Pantheon remote..."
          git remote add pantheon ssh://codeserver.dev.${{ secrets.PANTHEON_SITE }}@codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in:2222/~/repository.git

          echo "Pushing to Pantheon..."
          for i in {1..3}; do
            echo "Push attempt $i..."
            if git push pantheon main:master --force; then
              echo "Push successful!"
              break
            else
              echo "Push attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "All push attempts failed"
                exit 1
              fi
              sleep 5
            fi
          done
        env:
          TERMINUS_ALLOW_UNSUPPORTED_NEWER_PHP: 1

      - name: Run database updates and configuration import
        run: |
          set -x
          echo "Running database updates..."
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- updb -y || echo "Database updates failed but continuing..."

          echo "Importing configuration..."
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cim -y || echo "Config import failed but continuing..."

          echo "Clearing cache..."
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cr || echo "Cache clear failed but continuing..."

          echo "Running cron..."
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cron || echo "Cron failed but continuing..."