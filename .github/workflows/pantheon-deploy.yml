name: Test and Deploy to Pantheon Dev

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Forcefully remove submodule configurations
        run: |
          git submodule deinit --force .
          git rm --cached .gitmodules || :
          rm -f .gitmodules || :

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Add ondrej/php PPA
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php

      - name: Install PHP 8.3 and extensions
        run: |
          sudo apt-get update
          sudo apt-get install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo

      - name: Check PHP Version
        run: php -v

      - name: Check PHP Version Before Composer (test job)
        run: php -v

      - name: Git config (test job)
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Clear Composer Cache
        run: composer clear-cache

      - name: Update composer.lock (test job)
        run: composer update --no-install --ignore-platform-reqs

      - name: Allow Pheanstalk bundle plugin (test job)
        run: composer config --no-plugins allow-plugins.pheanstalk/pheanstalk-bundle true

      - name: Allow PHPStan extension installer plugin (test job)
        run: composer config --no-plugins allow-plugins.phpstan/extension-installer true

      - name: Install Dependencies (test job)
        run: /usr/bin/php8.3 $(which composer) install --prefer-dist --no-progress --ignore-platform-reqs

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit

      - name: Run PHPCS
        run: vendor/bin/phpcs

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

      - name: Run Security Check
        run: vendor/bin/security-checker security:check

  deploy:
    needs: test
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-24.04
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Add ondrej/php PPA (Deploy Job)
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php

      - name: Install PHP 8.3 and extensions (Deploy Job)
        run: |
          sudo apt-get update
          sudo apt-get install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-gd php8.3-intl php8.3-mbstring php8.3-mysql php8.3-opcache php8.3-xml php8.3-zip php8.3-soap php8.3-sodium php8.3-bcmath php8.3-exif php8.3-ftp php8.3-gettext php8.3-pdo

      - name: Clear Composer Cache (Deploy Job)
        run: composer clear-cache

      - name: Update composer.lock (Deploy Job)
        run: composer update --no-install --ignore-platform-reqs

      - name: Allow Pheanstalk bundle plugin (Deploy Job)
        run: composer config --no-plugins allow-plugins.pheanstalk/pheanstalk-bundle true

      - name: Allow PHPStan extension installer plugin (Deploy Job)
        run: composer config --no-plugins allow-plugins.phpstan/extension-installer true

      - name: Install Dependencies (Deploy Job)
        run: /usr/bin/php8.3 $(which composer) install --prefer-dist --no-dev --optimize-autoloader --ignore-platform-reqs

      - name: Set up Terminus
        run: |
          curl -O https://github.com/pantheon-systems/terminus/releases/download/3.0.0/terminus.phar
          chmod +x terminus.phar
          sudo mv terminus.phar /usr/local/bin/terminus

      - name: Authenticate with Pantheon
        run: terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}

      - name: Push code to Pantheon Dev
        run: |
          git remote add pantheon ssh://codeserver.dev.${{ secrets.PANTHEON_SITE }}@codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in:2222/~/repository.git
          git push pantheon main:master --force

      - name: Clear Pantheon cache
        run: terminus env:clear-cache ${{ secrets.PANTHEON_SITE }}.dev

      - name: Run database updates
        run: terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- updb -y

      - name: Import configuration
        run: terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cim -y

      - name: Clear cache after updates
        run: terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cr

      - name: Run cron
        run: terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cron

      - name: Check site status
        run: terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- status

      - name: Run security updates check
        run: terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- pm:security-check

      - name: Notify on Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
