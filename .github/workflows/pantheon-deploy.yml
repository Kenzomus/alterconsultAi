name: Test and Deploy to Pantheon Dev

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

env:
  PHP_VERSION: '8.3'
  COMPOSER_NO_INTERACTION: 1

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: curl, gd, intl, mbstring, mysql, opcache, xml, zip, soap, bcmath, exif, ftp, gettext, pdo, xmlrpc, sqlite3, pgsql, redis, imagick, gmp, ldap, apcu
          coverage: none
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-ansi --ignore-platform-reqs

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit
        continue-on-error: true

      - name: Run PHPCS
        run: vendor/bin/phpcs
        continue-on-error: true

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse
        continue-on-error: true

      - name: Run Security Check
        run: vendor/bin/local-php-security-checker check
        continue-on-error: true

  deploy:
    needs: test
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-24.04
    environment:
      name: dev
      url: https://dev-${{ secrets.PANTHEON_SITE }}.pantheonsite.io
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: curl, gd, intl, mbstring, mysql, opcache, xml, zip, soap, bcmath, exif, ftp, gettext, pdo, xmlrpc, sqlite3, pgsql, redis, imagick, gmp, ldap, apcu
          coverage: none
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-dev --optimize-autoloader --no-ansi --ignore-platform-reqs

      - name: Set up Terminus
        run: |
          curl -L -f -O https://github.com/pantheon-systems/terminus/releases/download/3.1.0/terminus.phar
          chmod +x terminus.phar
          sudo mv terminus.phar /usr/local/bin/terminus

      - name: Authenticate with Pantheon
        run: terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}
        env:
          TERMINUS_ALLOW_UNSUPPORTED_NEWER_PHP: 1

      - name: Add Pantheon SSH host keys
        run: |
          set -x
          PANTHEON_CODESERVER_HOST="codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in"
          PANTHEON_APPSERVER_HOST="appserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in"

          mkdir -p ~/.ssh
          ssh-keyscan -H -p 2222 $PANTHEON_CODESERVER_HOST >> ~/.ssh/known_hosts
          ssh-keyscan -H -p 2222 $PANTHEON_APPSERVER_HOST >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Push code to Pantheon Dev
        run: |
          git remote add pantheon ssh://codeserver.dev.${{ secrets.PANTHEON_SITE }}@codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in:2222/~/repository.git
          git push pantheon main:master --force

      - name: Run database updates and configuration import
        run: |
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- updb -y
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cim -y
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cr
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cron