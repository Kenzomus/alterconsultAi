name: Test and Deploy to Pantheon Dev

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Debug PHP version at start
        run: php -v

      - name: Clean up Composer environment
        run: |
          rm -rf vendor
          rm -f composer.lock
          rm -rf /home/runner/.cache/composer

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: curl, gd, intl, mbstring, mysql, opcache, xml, zip, soap, bcmath, exif, ftp, gettext, pdo, xmlrpc, soap, sqlite3, pgsql, redis, imagick, gmp, ldap, apcu
          coverage: none

      - name: Prepare Composer
        run: |
          composer self-update --stable
          composer clear-cache
          composer validate

      - name: Debug PHP version and path
        run: |
          php -v
          which php

      - name: Debug PHP and Composer versions
        run: |
          php -v
          composer --version

      - name: Allow phpstan/extension-installer
        run: composer config allow-plugins.phpstan/extension-installer true

      - name: Allow dealerdirect/phpcodesniffer-composer-installer
        run: composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-ansi --ignore-platform-reqs --no-plugins

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit || true

      - name: Run PHPCS
        run: vendor/bin/phpcs || true

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse || true

      - name: Run Security Check
        run: vendor/bin/local-php-security-checker check || true

  deploy:
    needs: test
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-24.04
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Clean up Composer environment
        run: |
          rm -rf vendor
          rm -f composer.lock
          rm -rf /home/runner/.cache/composer

      - name: Update apt cache and clean
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt clean

      - name: Setup PHP (Deploy Job)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: curl, gd, intl, mbstring, mysql, opcache, xml, zip, soap, bcmath, exif, ftp, gettext, pdo, xmlrpc, soap, sqlite3, pgsql, redis, imagick, gmp, ldap, apcu
          coverage: none
        env:
          update: true

      - name: Prepare Composer (Deploy Job)
        run: |
          composer self-update --stable
          composer clear-cache
          composer validate

      - name: Debug PHP and Composer versions (Deploy Job)
        run: |
          php -v
          composer --version

      - name: Debug PHP version before Composer install (Deploy Job)
        run: php -v

      - name: Allow phpstan/extension-installer
        run: composer config allow-plugins.phpstan/extension-installer true

      - name: Allow dealerdirect/phpcodesniffer-composer-installer (Deploy Job)
        run: composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true

      - name: Install Dependencies
        run: composer install --prefer-dist --no-dev --optimize-autoloader --no-ansi --ignore-platform-reqs --no-plugins

      - name: Set up Terminus
        run: |
          curl -L -f -O https://github.com/pantheon-systems/terminus/releases/download/3.1.0/terminus.phar
          chmod +x terminus.phar
          sudo mv terminus.phar /usr/local/bin/terminus
          ls -lh /usr/local/bin/terminus
          file /usr/local/bin/terminus
          head /usr/local/bin/terminus

      - name: Authenticate with Pantheon
        run: terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}
        env:
          TERMINUS_ALLOW_UNSUPPORTED_NEWER_PHP: 1

      - name: Add Pantheon SSH host keys
        run: |
          set -x
          echo "Attempting to add Pantheon SSH host keys..."
          whoami
          pwd
          echo "PANTHEON_SITE: ${{ secrets.PANTHEON_SITE }}"
          ping -c 3 codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in || echo "Ping failed. Check hostname and network."
          nslookup codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in
          nc -vz codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in 2222
          mkdir -p ~/.ssh
          ssh-keyscan -H -p 2222 codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in >> ~/.ssh/known_hosts
          echo "Contents of known_hosts:"
          cat ~/.ssh/known_hosts
          echo "Finished adding Pantheon SSH host keys."

      - name: Push code to Pantheon Dev
        run: |
          git remote add pantheon ssh://codeserver.dev.${{ secrets.PANTHEON_SITE }}@codeserver.dev.${{ secrets.PANTHEON_SITE }}.drush.in:2222/~/repository.git
          git push pantheon main:master --force

      - name: Run database updates and configuration import
        run: |
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- updb -y
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cim -y
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cr
          terminus drush ${{ secrets.PANTHEON_SITE }}.dev -- cron
